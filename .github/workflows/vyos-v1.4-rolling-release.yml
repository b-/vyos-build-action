name: VyOS v1.4 Rolling Release

on:
  schedule:
    - cron: 0 3 * * *
  create:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: true
  

env:
  BRANCH: current
  ARCHITECTURE: amd64
  BUILD_BY: vyos-build-action@github.com
  BUILD_TYPE: release
  VERSION: 1.4-rolling_bri
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged

    steps:
    - name: Checkout vyos-build repo
      uses: actions/checkout@v3
      with:
        repository: vyos/vyos-build
        path: vyos-build
        
    - name: Checkout vyos-build-action repo
      uses: actions/checkout@v3
      with:
        path: vyos-build-action
        submodules: 'true'
        

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ ( github.event_name == 'workflow_dispatch' && inputs.debug_enabled ) }}
        
    - name: Prepare #from vyos-tailscale/Makefile:prepare

      #working-directory: vyos-build-action/vyos-build-action
      run: |
        cp vyos-build-action/vyos-tailscale/tailscale/tailscale.gpg /tmp/tailscale.gpg

        mkdir -p vyos-build/data/live-build-config/includes.chroot/etc/default
        cp vyos-build-action/vyos-tailscale/tailscale/tailscaled vyos-build/data/live-build-config/includes.chroot/etc/default/tailscaled

        mkdir -p vyos-build/data/live-build-config/includes.chroot/etc/systemd/system/tailscaled.service.d
        cp vyos-build-action/vyos-tailscale/tailscale/override.conf vyos-build/data/live-build-config/includes.chroot/etc/systemd/system/tailscaled.service.d/override.conf
          
        export VERSION_T=${VERSION}-$(date +%Y%m%d%H%M)
        export VERSION_L=${VERSION}-latest
        echo "VERSION_T=${VERSION_T}" >> $GITHUB_ENV
        echo "VERSION_L=${VERSION_L}" >> $GITHUB_ENV
        echo "ISO_T=vyos-${VERSION_T}.iso" >> $GITHUB_ENV
        echo "ISO_L=vyos-${VERSION_L}.iso" >> $GITHUB_ENV
      
    - name: Build ISO
      working-directory: vyos-build
      run: 
        sudo ./build-vyos-image iso 
          --architecture $ARCHITECTURE
          --build-by $BUILD_BY 
          --build-type $BUILD_TYPE 
          --version $VERSION_T
          --custom-apt-key /tmp/tailscale.gpg 
          --custom-apt-entry "deb https://pkgs.tailscale.com/stable/debian bullseye main" 
          --custom-package "tailscale" 
          --custom-package "git"
          --build-comment "bri's custom VyOS 1.4-rolling"
            
    - name: Symlink latest
      working-directory: ./vyos-build/build
      run: ln -s $ISO_T $ISO_L

          #TODO: add minisign

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{  env.VERSION  }}
        files: |
          ${{ env.ISO_T }}
          ${{ env.ISO_L }}
            
            
  delete_old_workflow_runs:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Delete old workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 31
